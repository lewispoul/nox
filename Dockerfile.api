# Dockerfile.api - Multi-stage build for Nox API v2.3+
FROM python:3.10-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements-phase2.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements-phase2.txt

# Production stage
FROM python:3.10-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash nox

# Set working directory
WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /root/.local /home/nox/.local

# Copy application code
COPY nox-api/ ./
COPY auth/ ./auth/
COPY observability/ ./observability/
COPY policy/ ./policy/
COPY rate_limit_and_policy.py .

# Create necessary directories
RUN mkdir -p data logs sandbox && \
    chown -R nox:nox /app

# Switch to non-root user
USER nox

# Set PATH to include user local binaries
ENV PATH=/home/nox/.local/bin:$PATH
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD python3 -c "import requests; requests.get('http://localhost:8000/health', timeout=5)" || exit 1

# Default command - Use uvicorn to run the FastAPI app
CMD ["python3", "-m", "uvicorn", "api.nox_api:app", "--host", "0.0.0.0", "--port", "8000"]

name: CD - Nox API Deployment Pipeline

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nox-api

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to staging ECS
      run: |
        aws ecs update-service \
          --cluster nox-staging-cluster \
          --service nox-api-staging \
          --force-new-deployment

    - name: Health check staging
      run: |
        sleep 30
        curl -f https://staging-api.nox.local/api/v8/auth/health

    - name: Notify staging deployment
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        text: |
          ðŸš€ Nox API v8.0.0 deployed to STAGING
          Status: ${{ job.status }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment: production
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials  
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to production ECS
      run: |
        aws ecs update-service \
          --cluster nox-production-cluster \
          --service nox-api-production \
          --force-new-deployment

    - name: Health check production
      run: |
        sleep 60
        curl -f https://api.nox.local/api/v8/auth/health

    - name: Notify production deployment
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      uses: 8398a7/action-slack@v3
      if: success()
      with:
        status: success
        channel: '#deployments'
        text: |
          ðŸŽ‰ Nox API v8.0.0 deployed to PRODUCTION
          Status: SUCCESS

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nox-api
  namespace: nox-api
  labels:
    app: nox-api
    version: "7.0.0"
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: nox-api
  template:
    metadata:
      labels:
        app: nox-api
        version: "7.0.0"
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/api/v7/metrics/prometheus"
    spec:
      serviceAccountName: nox-api-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: nox-api
        image: nox-api:7.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: nox-api-config
        - secretRef:
            name: nox-api-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v7/auth/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v7/auth/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /api/v7/auth/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable" 
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nox-api-service-account
  namespace: nox-api
  labels:
    app: nox-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nox-api-role
  namespace: nox-api
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nox-api-rolebinding
  namespace: nox-api
subjects:
- kind: ServiceAccount
  name: nox-api-service-account
  namespace: nox-api
roleRef:
  kind: Role
  name: nox-api-role
  apiGroup: rbac.authorization.k8s.io
